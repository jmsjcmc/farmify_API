// <auto-generated />
using Farmify_Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Farmify_Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250621022345_1")]
    partial class _1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Farmify_Api.Models.Address.Barangay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityMunicipalityid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityMunicipalityid");

                    b.ToTable("Barangays");
                });

            modelBuilder.Entity("Farmify_Api.Models.Address.CityMunicipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Provinceid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Provinceid");

                    b.ToTable("CityMunicipalities");
                });

            modelBuilder.Entity("Farmify_Api.Models.Address.Island", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Islands");
                });

            modelBuilder.Entity("Farmify_Api.Models.Address.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Regionid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Regionid");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Farmify_Api.Models.Address.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Islandid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Regioncode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Islandid");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Farmify_Api.Models.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Farmify_Api.Models.Address.Barangay", b =>
                {
                    b.HasOne("Farmify_Api.Models.Address.CityMunicipality", "CityMunicipality")
                        .WithMany("Barangay")
                        .HasForeignKey("CityMunicipalityid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityMunicipality");
                });

            modelBuilder.Entity("Farmify_Api.Models.Address.CityMunicipality", b =>
                {
                    b.HasOne("Farmify_Api.Models.Address.Province", "Province")
                        .WithMany("CityMunicipality")
                        .HasForeignKey("Provinceid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Farmify_Api.Models.Address.Province", b =>
                {
                    b.HasOne("Farmify_Api.Models.Address.Region", "Region")
                        .WithMany("Province")
                        .HasForeignKey("Regionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Farmify_Api.Models.Address.Region", b =>
                {
                    b.HasOne("Farmify_Api.Models.Address.Island", "Island")
                        .WithMany("Region")
                        .HasForeignKey("Islandid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Island");
                });

            modelBuilder.Entity("Farmify_Api.Models.Address.CityMunicipality", b =>
                {
                    b.Navigation("Barangay");
                });

            modelBuilder.Entity("Farmify_Api.Models.Address.Island", b =>
                {
                    b.Navigation("Region");
                });

            modelBuilder.Entity("Farmify_Api.Models.Address.Province", b =>
                {
                    b.Navigation("CityMunicipality");
                });

            modelBuilder.Entity("Farmify_Api.Models.Address.Region", b =>
                {
                    b.Navigation("Province");
                });
#pragma warning restore 612, 618
        }
    }
}
